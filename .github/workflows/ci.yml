name: CI

on:
  push:
    branches: ["master"]
    paths:
      - "services/**"
  pull_request:
    branches: ["master"]
    paths:
      - "services/**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      user_changed: ${{ steps.filter.outputs.user }}
      wallet_changed: ${{ steps.filter.outputs.wallet }}
      payment_changed: ${{ steps.filter.outputs.wallet }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            user:
              - 'services/user/**'
            wallet:
              - 'services/wallet/**'
            payment:
              - 'services/payment/**'

  user-service:
    needs: detect-changes
    if: needs.detect-changes.outputs.user_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Run tests for user service
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.2"
          submodules: recursive
      - name: Fix workspace path
        run: |
          echo "Original workspace: $GITHUB_WORKSPACE"
          cd ${{ github.workspace }}/..
          mv Stacklo Stacklo-temp
          mv Stacklo-temp/Stacklo/* Stacklo-temp/
          mv Stacklo-temp Stacklo
          ls -la  # Verify services/user exists

      # - name: Debug repository structure
      #   run: |
      #     echo "=== Current directory ==="
      #     pwd
      #     echo "=== Repository contents ==="
      #     ls -R
      #     echo "=== services/ contents ==="
      #     ls -la services/
      #     echo "=== services/user contents ==="
      #     ls -la services/user/ || echo "services/user not found"
      # - name: Debug directory structure
      #   run: |
      #     echo "Workspace: /services/user"
      #     ls -R services/user
      #     ls -R services/user
      - name: Build
        working-directory: ${{ github.workspace }}/..
        run: |
          cd Stacklo/services/user
          go build -v ./...

      - name: Test
        run: go test -v ./...
  wallet-service:
    needs: detect-changes
    if: needs.detect-changes.outputs.wallet_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Run tests for wallet service
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.2"
      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          cd services/wallet
          go test -v ./...
  payment-service:
    needs: detect-changes
    if: needs.detect-changes.outputs.wallet_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Run tests for payment service
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.2"
      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          cd services/payment
          go test -v ./...
